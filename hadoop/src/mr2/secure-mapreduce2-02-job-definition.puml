@startuml
title Secure Map Reduce 2 - Map Reduce Job Definition
autonumber
'hide footbox

participant "Client\n(c)" as C
participant "Resource\nManager\n(rm)" as RM
participant "Node\nManager\n(nm)" as NM
'participant "Shuffle\nHandler\n(ss)" as SS
participant "History\nServer\n(hs)" as HS
'participant "Application\nMaster\n(am)" as AM
'participant "Client\nService\n(cs)" as CS
'participant "Application\nContainer\n(ac)" as AC #red
'participant "Task\n(t)" as T #orange
'participant "File\nSystem\n(fs)" as FS
participant "Name\nNode\n(nn)" as NN
participant "Data\nNode\n(dn)" as DN
participant "Kerberos\nKDC" as KDC

'note over C,DN #green: QUESTION: ?

  activate C

'1
C->KDC: <b>kinit/AS_REQ</b> [KRB] ( c-kp ): AS_REP{c-tgt}

'2
C->KDC: <b>TGS_REQ</b> [KRB(c-tgt)] ( rm-kp ): TGS_REP{c-rm-kst}

'3
C->RM: <b>createJob</b> [RSKT(c-rm-kst)] (): job-id
  note right: Used to create\nstaging job-dir.

  opt if tasks will create new jobs
'4
C->RM: <b>getResourceManagerDelegationToken\n[RSKT(c-rm-kst)]\n()\n: c-rm-dt
  note right: e.g. Used by\nOozie tasks
  end opt

'5
C->KDC: <b>TGS_REQ</b> [KRB(c-tgt)] ( hs-kp ): TGS_REP{c-hs-kst}

'6
C->HS: <b>getHistoryServerDelegationToken</b> [RSKT(c-hs-kst)] (): c-hs-dt
  note right: To access HS for\ncompleted job status

'7
C->KDC: <b>TGS_REQ</b> [KRB(c-tgt)] ( nn-kp ): TGS_REP{c-nn-kst}

'8
C->NN: <b>getNameNodeDelegationToken</b> [RSKT(c-nn-kst)] (): c-nn-dt
  note right: For tasks to\naccess HDFS data.

note over C,DN #green: Q1: Is this just a secret key or are token created and signed with this?

'9
C->C: <b>createShuffleTokenSecretKey()\n : shfl-tkn-mk

'10
C->C: <b>createShuffleToken\n ( shfl-tkn-mk ) \n: shfl-tkn
  note right: Used by reduce tasks\nto fetch shuffle data\nfrom NM/ShuffleHandler.

note over C,DN #green: Q2: What tokens/secrets are included exactly?

'11
C->C: <b>serializeTokens\n( c-nn-dt, c-hs-dt, c-rm-dt, shfl-tkn )\n: c-tokens
  note right: Serialize all tokens and secret\nkeys to a byte array.\nPassed to RM during appSubmit.

'12
C->NN: <b>mkdir</b> [RSKT(c-nn-kst)] ( job-dir )
  note right: Create job staging\ndir in HDFS.

  loop job-conf, splits, etc.
'13
C->NN: <b>writeFile</b> [RSKT(c-nn-kst)] (): blk-id, blk-loc, blk-tkn

'14
C->DN: <b>writeBlock</b>* [DTP(blk-tkn)] ( blk-id, blk-data )
  end loop

@enduml