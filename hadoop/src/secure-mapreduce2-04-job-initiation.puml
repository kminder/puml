@startuml
title Secure Map Reduce 2 - Map Reduce Job Initiation
autonumber
'hide footbox

'participant "Client\n(c)" as C
participant "Resource\nManager\n(rm)" as RM
'participant "History\nServer\n(hs)" as HS
participant "Node\nManager\n(nm)" as NM
participant "Shuffle\nService\n(ss)" as SS
participant "Application\nMaster\n(am)" as AM
participant "Client\nService\n(cs)" as CS
'participant "Application\nContainer\n(ac)" as AC #red
'participant "Task\n(t)" as T #orange
participant "File\nSystem\n(fs)" as FS
participant "Name\nNode\n(nn)" as NN
participant "Data\nNode\n(dn)" as DN
participant "Kerberos\nKDC" as KDC

  'note over RM,DN #green: QUESTION ?

note over RM,KDC #green: Q1: Where are the submitApplication inputs (job-dir, c-tokens) stored?

 activate RM
'1
RM->RM: <b>allocateResource\n ( mr-rsrc-req )\n : mr-rsrc-res{nm-tkn,ac-tkn}
  note right: RM allocates resources\nwith itself for running MR AM.\nTokens from boostrap.

  activate RM

'2
RM->RM: <b>createNodeManagerToken\n ( nm-tkn-sk )\n : nm-tkn

'3
RM->RM: createApplicationContainerToken\n ( ac-tkn-sk )\n : ac-tkn

'4
RM<--RM: <b>: mr-rsrc-res{nm-tkn,ac-tkn}

  deactivate RM

'5
RM->RM: <b>serializeTokens\n ( c-tokens, cs-tkn, ac-tkn )\n : rm-tokens

'6
RM->KDC: <b>kinit/AS_REQ</b> [KRB] ( rm-kp ): AS_REP{rm-tgt}

'7
RM->KDC: <b>TGS_REQ</b> [KRB(rm-tgt)] ( nm-kp ): TGS_REP{rm-nm-kst}

'8
RM->NM: <b>startContainer\n [RSKT(rm-nm-kst)]\n ( mr-rsrs-res, rm-tokens )
  note right: tokens: deleg, shfl, client, app

  deactivate RM
  activate NM

'9
  create SS
NM->SS: <b>start</b>?

'10
NM->FS: <b>storeTokens\n ( rm-tokens ): rm-tokens-loc
  note left: Write secrets to local token-file.\nIncludes client-token, protected\nby OS permissions
  create AM

note over RM,KDC #green: Q2: What user is the AM run as?

'11
NM->AM: <b>exec\n [as rm?]\n ( job-dir, rm-tokens-loc )
  activate AM
  note left: Provided the location\nof the token file via env

  deactivate NM

'12
AM->FS: <b>loadTokens\n ( rm-tokens-loc )\n : rm-tokens

'13
AM->AM: <b>createJobToken\n ( job-tkn-sk )\n : job-tkn

'14
AM->RM: <b>register\n [RSAT(app-tkn?????)]\n ()
  note right: Lets NM know MR App is alive.

'15
  create CS
AM->CS: <b>start</b>\n ( client-tkn-sk? )
  note right: A listener for Client\nto query job status.

'AM uses the app token provided in the token file.
'This token file has user-only read perms.
'The AM then starts and RPC listener (client-service) for the client to talk to the client-app
'client-service is protected by the client-secret
'job-client polls RM and finds it running
'job-client switches to polling client-service for status
'MR app creates the JobToken

@enduml